"""
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара:
название, цена, количество, единица измерения.
Структуру нужно сформировать программно, запросив все данные у пользователя.
Пример готовой структуры:

[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Нужно собрать аналитику о товарах. Реализовать словарь,
в котором каждый ключ — характеристика товара, например, название.
Тогда значение — список значений-характеристик, например, список названий товаров.
Пример:

{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
"""

products = []
prop_prod = ['название', 'цена', 'количество', 'ед. изм.']
out = "N"
menu = {1: "Ввести данные", 2: "Посмотреть данные", 3: "Показать аналитику данных", 4: "Выйти"}
alert_no_data = "Выбор операций Menu ограничен.\nВ базе товаров отсутствуют данные, пожалуйста внесите данные. "
use_select = 1  # Номер пункта меню, введённый пользователем
max_num_err = 5  # Определение максимального количества не корректных вводов
num_err = 0  # Счётчик кол-ва ошибок
summary = dict.fromkeys(prop_prod, [])

#  Цикл работы программы пока пользователь не решит выйти или не переполнится счётчик количества ошибочных вводов
while (out == "N" or out == "n") and num_err < max_num_err:
    #  Условие вывода вариантов меню при наличии или отсутствии данных в products
    if not products:
        print(50 * '-' + '\n' + alert_no_data + '\n')
        print("Menu:")
        print(list(menu.items())[0])
        print(list(menu.items())[-1])
        use_select = int(input("Введите номер пункта меню: "))
        print()
    else:
        print(50 * '-')
        print(*menu.items(), sep='\n')
        use_select = int(input("Введите номер пункта меню: "))
        print()

    #  Условие при выборе отсутствующего пункта меню
    if use_select not in ((list(menu.keys())[0], list(menu.keys())[-1]) if not products else tuple(menu.keys())):
        num_err += 1
        print(50 * '-')
        if num_err < max_num_err:
            print(f"Выбранный номер пункта меню - {use_select}, отсутствует.\n"
                  f"Введите ещё раз. Осталось {max_num_err - num_err} попытки")
        else:
            print(f"Выбранный номер пункта меню - {use_select}, отсутствует.\n"
                  f"Количество попыток ввода исчерпано. Программа завешена.")
            break
        continue
    #  Действия если пункт меню выбран верно
    else:
        num_err = 0
        # Выход из программы
        if use_select == 4:
            out = input("Вы хотите завершить работу программы Y/N: ")
            print()
            #  Цикл при не верном выборе варианта выхода из программы.
            #  Принудительно закрывает программу, если кол-во не верных вводов превышает max_num_err
            while out != "Y" and out != "y" and out != "N" and out != "n":
                num_err += 1
                if num_err < max_num_err:
                    print(f"Выбранный вариант ответа '{out}' отсутствует.\n"
                          f"Осталось {max_num_err - num_err} попытки до принудительного завершения работы программы")
                    out = input("Вы хотите завершить работу программы Y/N: ")
                    print()
                    continue
                else:
                    print(f"Выбранный вариант ответа '{out}' отсутствует.\n"
                          f"Количество попыток ввода исчерпано. Программа завешена.")
                    break
            continue
        # Ввод данных
        elif use_select == 1:
            print(50 * '-')
            n = int(input('Введите количество товара вы хотите внести в систему: '))
            print()
            while n < 0:
                num_err += 1
                print(50 * '-')
                if num_err < max_num_err:
                    print(f"Введены не корректные данные. Кол-во товара должно быть не отрицательным числом.\n"
                          f"Осталось {max_num_err - num_err} попытки до принудительного завершения работы программы")
                    n = int(input("Введите не отрицательное количество товара которое вы хотите внести в систему: "))
                    print()
                    continue
                else:
                    print(f"Введены не корректные данные. Кол-во товара должно быть не отрицательным числом.\n"
                          f"Количество попыток ввода исчерпано. Программа завешена.")
                    break
            # Цикл ввода товаров и их свойств
            for i in range(n):
                i_prod = {}  # Временный словарь для заполнения вставки в кортеж товаров
                for j in prop_prod:
                    i_prod[j] = input(f'Введите {j}: ')
                products.append((len(products)+1, i_prod))
                print()
            print(f'Вы добавили следующие {n} товаров:')
            print(*products[len(products)-n:], sep='\n')
        elif use_select == 2:
            print(50 * '-')
            print("Имеющиеся товары:")
            print(*products, sep='\n')
        elif use_select == 3:
            tmp_summary = list(zip(*products))[1]
            for dict_for_tmp in tmp_summary:
                for dict_keys in summary.keys():
                    tmp = dict_for_tmp[dict_keys]
                    summary[dict_keys] = summary[dict_keys] + [tmp]
            print(summary)
